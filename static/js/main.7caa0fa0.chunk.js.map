{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","email","body","name","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"m38IAEaA,EAAc,SAAC,GAAD,QAAGC,QAC5BC,EADyB,EACzBA,MACAC,EAFyB,EAEzBA,KACAC,EAHyB,EAGzBA,KAHyB,OAKzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,IAEtC,OAED,mBACEC,UAAU,qBACVC,KAAI,kBAAaJ,GAFnB,SAIGA,OAIL,qBAAKG,UAAU,oBAAf,SACGF,IAEH,2BCrBSI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACE,oBAAIA,UAAU,oBAAd,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,oBAAII,UAAU,oBAAd,SACE,cAAC,EAAD,CACEJ,QAASA,GACJA,EAAQS,cCRZC,G,MAAW,SAAC,GAAD,QAAGC,KAAQR,EAAX,EAAWA,KAAMF,EAAjB,EAAiBA,MAAjB,OACtB,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGE,MCAQS,EAAW,SAAC,GAAD,QAAGC,KACzBJ,EADsB,EACtBA,GACAK,EAFsB,EAEtBA,MACAZ,EAHsB,EAGtBA,KACAS,EAJsB,EAItBA,KACAJ,EALsB,EAKtBA,SALsB,OAOtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAEAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGP,UAAU,iBAAb,SACGF,IAGkB,IAApBK,EAASQ,OACL,kDACA,cAAC,EAAD,CAAaR,SAAUA,GAAeE,OC3BlCO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACE,oBAAIA,UAAU,iBAAd,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,oBAAIT,UAAU,iBAAd,SACE,cAAC,EAAD,CAAUS,KAAMA,GAAWA,EAAKJ,c,qBCOnC,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAViBQ,EAUDN,EAAKM,OATdC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAAW,MAU3DZ,UAPqBe,EAOGT,EAAKJ,GANtBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAuBA,EAJJH,KAcNM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7caa0fa0.chunk.js","sourcesContent":["import './CommentInfo.scss';\n\nexport const CommentInfo = ({ comment: {\n  email,\n  body,\n  name,\n} }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto: ${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n    <br />\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    <ul className=\"CommentList__list\">\n      {comments.map(comment => (\n        <li className=\"CommentList__item\">\n          <CommentInfo\n            comment={comment}\n            key={comment.id}\n          />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post: {\n  id,\n  title,\n  body,\n  user,\n  comments,\n} }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        {user && <UserInfo user={user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length === 0\n      ? (<b> No comments yet </b>)\n      : (<CommentList comments={comments} key={id} />)\n    }\n  </div>\n);\n","import './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    <ul className=\"PostList__list\">\n      {posts.map(post => (\n        <li className=\"PostList__item\">\n          <PostInfo post={post} key={post.id} />\n        </li>\n      ))}\n    </ul>\n\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserId(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommetById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserId(post.userId),\n  comments: getCommetById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}